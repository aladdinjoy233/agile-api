// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using agile_api.Models;

#nullable disable

namespace agile_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250130132501_FixProductosYCategorias")]
    partial class FixProductosYCategorias
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UsuarioTienda", b =>
                {
                    b.Property<int>("TiendaId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TiendaId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioTienda");
                });

            modelBuilder.Entity("agile_api.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TiendaId")
                        .HasColumnType("int");

                    b.HasKey("CategoriaId");

                    b.HasIndex("TiendaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("agile_api.Models.InvitacionPendiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EmailInvitado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaInvitacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TiendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TiendaId");

                    b.ToTable("InvitacionesPendientes");
                });

            modelBuilder.Entity("agile_api.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("TiendaId")
                        .HasColumnType("int");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TiendaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("agile_api.Models.Tienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DueñoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DueñoId");

                    b.ToTable("Tiendas");
                });

            modelBuilder.Entity("agile_api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UsuarioTienda", b =>
                {
                    b.HasOne("agile_api.Models.Tienda", null)
                        .WithMany()
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agile_api.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("agile_api.Models.Categoria", b =>
                {
                    b.HasOne("agile_api.Models.Tienda", "Tienda")
                        .WithMany("Categorias")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("agile_api.Models.InvitacionPendiente", b =>
                {
                    b.HasOne("agile_api.Models.Tienda", "Tienda")
                        .WithMany("InvitacionesPendientes")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("agile_api.Models.Producto", b =>
                {
                    b.HasOne("agile_api.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("agile_api.Models.Tienda", "Tienda")
                        .WithMany("Productos")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("agile_api.Models.Tienda", b =>
                {
                    b.HasOne("agile_api.Models.Usuario", "Dueño")
                        .WithMany()
                        .HasForeignKey("DueñoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dueño");
                });

            modelBuilder.Entity("agile_api.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("agile_api.Models.Tienda", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("InvitacionesPendientes");

                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
